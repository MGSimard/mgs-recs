/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VideoEditingIndexRouteImport } from './routes/video-editing/index'
import { Route as VersionControlIndexRouteImport } from './routes/version-control/index'
import { Route as VectorGraphicsIndexRouteImport } from './routes/vector-graphics/index'
import { Route as ValidationIndexRouteImport } from './routes/validation/index'
import { Route as UiLibrariesIndexRouteImport } from './routes/ui-libraries/index'
import { Route as StateManagementIndexRouteImport } from './routes/state-management/index'
import { Route as PaymentsIndexRouteImport } from './routes/payments/index'
import { Route as OrmsIndexRouteImport } from './routes/orms/index'
import { Route as MailingIndexRouteImport } from './routes/mailing/index'
import { Route as LearningIndexRouteImport } from './routes/learning/index'
import { Route as IconLibrariesIndexRouteImport } from './routes/icon-libraries/index'
import { Route as HostingIndexRouteImport } from './routes/hosting/index'
import { Route as GraphicDesignIndexRouteImport } from './routes/graphic-design/index'
import { Route as FrontendLanguagesIndexRouteImport } from './routes/frontend-languages/index'
import { Route as FrameworksIndexRouteImport } from './routes/frameworks/index'
import { Route as FileStorageIndexRouteImport } from './routes/file-storage/index'
import { Route as EnvironmentIndexRouteImport } from './routes/environment/index'
import { Route as DiagnosticsIndexRouteImport } from './routes/diagnostics/index'
import { Route as DesignIndexRouteImport } from './routes/design/index'
import { Route as DatabasesIndexRouteImport } from './routes/databases/index'
import { Route as DatabaseProvidersIndexRouteImport } from './routes/database-providers/index'
import { Route as CssLibrariesIndexRouteImport } from './routes/css-libraries/index'
import { Route as CodeEditorsIndexRouteImport } from './routes/code-editors/index'
import { Route as CiCdIndexRouteImport } from './routes/ci-cd/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AnalyticsIndexRouteImport } from './routes/analytics/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VideoEditingIndexRoute = VideoEditingIndexRouteImport.update({
  id: '/video-editing/',
  path: '/video-editing/',
  getParentRoute: () => rootRouteImport,
} as any)
const VersionControlIndexRoute = VersionControlIndexRouteImport.update({
  id: '/version-control/',
  path: '/version-control/',
  getParentRoute: () => rootRouteImport,
} as any)
const VectorGraphicsIndexRoute = VectorGraphicsIndexRouteImport.update({
  id: '/vector-graphics/',
  path: '/vector-graphics/',
  getParentRoute: () => rootRouteImport,
} as any)
const ValidationIndexRoute = ValidationIndexRouteImport.update({
  id: '/validation/',
  path: '/validation/',
  getParentRoute: () => rootRouteImport,
} as any)
const UiLibrariesIndexRoute = UiLibrariesIndexRouteImport.update({
  id: '/ui-libraries/',
  path: '/ui-libraries/',
  getParentRoute: () => rootRouteImport,
} as any)
const StateManagementIndexRoute = StateManagementIndexRouteImport.update({
  id: '/state-management/',
  path: '/state-management/',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentsIndexRoute = PaymentsIndexRouteImport.update({
  id: '/payments/',
  path: '/payments/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrmsIndexRoute = OrmsIndexRouteImport.update({
  id: '/orms/',
  path: '/orms/',
  getParentRoute: () => rootRouteImport,
} as any)
const MailingIndexRoute = MailingIndexRouteImport.update({
  id: '/mailing/',
  path: '/mailing/',
  getParentRoute: () => rootRouteImport,
} as any)
const LearningIndexRoute = LearningIndexRouteImport.update({
  id: '/learning/',
  path: '/learning/',
  getParentRoute: () => rootRouteImport,
} as any)
const IconLibrariesIndexRoute = IconLibrariesIndexRouteImport.update({
  id: '/icon-libraries/',
  path: '/icon-libraries/',
  getParentRoute: () => rootRouteImport,
} as any)
const HostingIndexRoute = HostingIndexRouteImport.update({
  id: '/hosting/',
  path: '/hosting/',
  getParentRoute: () => rootRouteImport,
} as any)
const GraphicDesignIndexRoute = GraphicDesignIndexRouteImport.update({
  id: '/graphic-design/',
  path: '/graphic-design/',
  getParentRoute: () => rootRouteImport,
} as any)
const FrontendLanguagesIndexRoute = FrontendLanguagesIndexRouteImport.update({
  id: '/frontend-languages/',
  path: '/frontend-languages/',
  getParentRoute: () => rootRouteImport,
} as any)
const FrameworksIndexRoute = FrameworksIndexRouteImport.update({
  id: '/frameworks/',
  path: '/frameworks/',
  getParentRoute: () => rootRouteImport,
} as any)
const FileStorageIndexRoute = FileStorageIndexRouteImport.update({
  id: '/file-storage/',
  path: '/file-storage/',
  getParentRoute: () => rootRouteImport,
} as any)
const EnvironmentIndexRoute = EnvironmentIndexRouteImport.update({
  id: '/environment/',
  path: '/environment/',
  getParentRoute: () => rootRouteImport,
} as any)
const DiagnosticsIndexRoute = DiagnosticsIndexRouteImport.update({
  id: '/diagnostics/',
  path: '/diagnostics/',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignIndexRoute = DesignIndexRouteImport.update({
  id: '/design/',
  path: '/design/',
  getParentRoute: () => rootRouteImport,
} as any)
const DatabasesIndexRoute = DatabasesIndexRouteImport.update({
  id: '/databases/',
  path: '/databases/',
  getParentRoute: () => rootRouteImport,
} as any)
const DatabaseProvidersIndexRoute = DatabaseProvidersIndexRouteImport.update({
  id: '/database-providers/',
  path: '/database-providers/',
  getParentRoute: () => rootRouteImport,
} as any)
const CssLibrariesIndexRoute = CssLibrariesIndexRouteImport.update({
  id: '/css-libraries/',
  path: '/css-libraries/',
  getParentRoute: () => rootRouteImport,
} as any)
const CodeEditorsIndexRoute = CodeEditorsIndexRouteImport.update({
  id: '/code-editors/',
  path: '/code-editors/',
  getParentRoute: () => rootRouteImport,
} as any)
const CiCdIndexRoute = CiCdIndexRouteImport.update({
  id: '/ci-cd/',
  path: '/ci-cd/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsIndexRoute = AnalyticsIndexRouteImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/ci-cd': typeof CiCdIndexRoute
  '/code-editors': typeof CodeEditorsIndexRoute
  '/css-libraries': typeof CssLibrariesIndexRoute
  '/database-providers': typeof DatabaseProvidersIndexRoute
  '/databases': typeof DatabasesIndexRoute
  '/design': typeof DesignIndexRoute
  '/diagnostics': typeof DiagnosticsIndexRoute
  '/environment': typeof EnvironmentIndexRoute
  '/file-storage': typeof FileStorageIndexRoute
  '/frameworks': typeof FrameworksIndexRoute
  '/frontend-languages': typeof FrontendLanguagesIndexRoute
  '/graphic-design': typeof GraphicDesignIndexRoute
  '/hosting': typeof HostingIndexRoute
  '/icon-libraries': typeof IconLibrariesIndexRoute
  '/learning': typeof LearningIndexRoute
  '/mailing': typeof MailingIndexRoute
  '/orms': typeof OrmsIndexRoute
  '/payments': typeof PaymentsIndexRoute
  '/state-management': typeof StateManagementIndexRoute
  '/ui-libraries': typeof UiLibrariesIndexRoute
  '/validation': typeof ValidationIndexRoute
  '/vector-graphics': typeof VectorGraphicsIndexRoute
  '/version-control': typeof VersionControlIndexRoute
  '/video-editing': typeof VideoEditingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/ci-cd': typeof CiCdIndexRoute
  '/code-editors': typeof CodeEditorsIndexRoute
  '/css-libraries': typeof CssLibrariesIndexRoute
  '/database-providers': typeof DatabaseProvidersIndexRoute
  '/databases': typeof DatabasesIndexRoute
  '/design': typeof DesignIndexRoute
  '/diagnostics': typeof DiagnosticsIndexRoute
  '/environment': typeof EnvironmentIndexRoute
  '/file-storage': typeof FileStorageIndexRoute
  '/frameworks': typeof FrameworksIndexRoute
  '/frontend-languages': typeof FrontendLanguagesIndexRoute
  '/graphic-design': typeof GraphicDesignIndexRoute
  '/hosting': typeof HostingIndexRoute
  '/icon-libraries': typeof IconLibrariesIndexRoute
  '/learning': typeof LearningIndexRoute
  '/mailing': typeof MailingIndexRoute
  '/orms': typeof OrmsIndexRoute
  '/payments': typeof PaymentsIndexRoute
  '/state-management': typeof StateManagementIndexRoute
  '/ui-libraries': typeof UiLibrariesIndexRoute
  '/validation': typeof ValidationIndexRoute
  '/vector-graphics': typeof VectorGraphicsIndexRoute
  '/version-control': typeof VersionControlIndexRoute
  '/video-editing': typeof VideoEditingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/ci-cd/': typeof CiCdIndexRoute
  '/code-editors/': typeof CodeEditorsIndexRoute
  '/css-libraries/': typeof CssLibrariesIndexRoute
  '/database-providers/': typeof DatabaseProvidersIndexRoute
  '/databases/': typeof DatabasesIndexRoute
  '/design/': typeof DesignIndexRoute
  '/diagnostics/': typeof DiagnosticsIndexRoute
  '/environment/': typeof EnvironmentIndexRoute
  '/file-storage/': typeof FileStorageIndexRoute
  '/frameworks/': typeof FrameworksIndexRoute
  '/frontend-languages/': typeof FrontendLanguagesIndexRoute
  '/graphic-design/': typeof GraphicDesignIndexRoute
  '/hosting/': typeof HostingIndexRoute
  '/icon-libraries/': typeof IconLibrariesIndexRoute
  '/learning/': typeof LearningIndexRoute
  '/mailing/': typeof MailingIndexRoute
  '/orms/': typeof OrmsIndexRoute
  '/payments/': typeof PaymentsIndexRoute
  '/state-management/': typeof StateManagementIndexRoute
  '/ui-libraries/': typeof UiLibrariesIndexRoute
  '/validation/': typeof ValidationIndexRoute
  '/vector-graphics/': typeof VectorGraphicsIndexRoute
  '/version-control/': typeof VersionControlIndexRoute
  '/video-editing/': typeof VideoEditingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/auth'
    | '/ci-cd'
    | '/code-editors'
    | '/css-libraries'
    | '/database-providers'
    | '/databases'
    | '/design'
    | '/diagnostics'
    | '/environment'
    | '/file-storage'
    | '/frameworks'
    | '/frontend-languages'
    | '/graphic-design'
    | '/hosting'
    | '/icon-libraries'
    | '/learning'
    | '/mailing'
    | '/orms'
    | '/payments'
    | '/state-management'
    | '/ui-libraries'
    | '/validation'
    | '/vector-graphics'
    | '/version-control'
    | '/video-editing'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/auth'
    | '/ci-cd'
    | '/code-editors'
    | '/css-libraries'
    | '/database-providers'
    | '/databases'
    | '/design'
    | '/diagnostics'
    | '/environment'
    | '/file-storage'
    | '/frameworks'
    | '/frontend-languages'
    | '/graphic-design'
    | '/hosting'
    | '/icon-libraries'
    | '/learning'
    | '/mailing'
    | '/orms'
    | '/payments'
    | '/state-management'
    | '/ui-libraries'
    | '/validation'
    | '/vector-graphics'
    | '/version-control'
    | '/video-editing'
  id:
    | '__root__'
    | '/'
    | '/analytics/'
    | '/auth/'
    | '/ci-cd/'
    | '/code-editors/'
    | '/css-libraries/'
    | '/database-providers/'
    | '/databases/'
    | '/design/'
    | '/diagnostics/'
    | '/environment/'
    | '/file-storage/'
    | '/frameworks/'
    | '/frontend-languages/'
    | '/graphic-design/'
    | '/hosting/'
    | '/icon-libraries/'
    | '/learning/'
    | '/mailing/'
    | '/orms/'
    | '/payments/'
    | '/state-management/'
    | '/ui-libraries/'
    | '/validation/'
    | '/vector-graphics/'
    | '/version-control/'
    | '/video-editing/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  CiCdIndexRoute: typeof CiCdIndexRoute
  CodeEditorsIndexRoute: typeof CodeEditorsIndexRoute
  CssLibrariesIndexRoute: typeof CssLibrariesIndexRoute
  DatabaseProvidersIndexRoute: typeof DatabaseProvidersIndexRoute
  DatabasesIndexRoute: typeof DatabasesIndexRoute
  DesignIndexRoute: typeof DesignIndexRoute
  DiagnosticsIndexRoute: typeof DiagnosticsIndexRoute
  EnvironmentIndexRoute: typeof EnvironmentIndexRoute
  FileStorageIndexRoute: typeof FileStorageIndexRoute
  FrameworksIndexRoute: typeof FrameworksIndexRoute
  FrontendLanguagesIndexRoute: typeof FrontendLanguagesIndexRoute
  GraphicDesignIndexRoute: typeof GraphicDesignIndexRoute
  HostingIndexRoute: typeof HostingIndexRoute
  IconLibrariesIndexRoute: typeof IconLibrariesIndexRoute
  LearningIndexRoute: typeof LearningIndexRoute
  MailingIndexRoute: typeof MailingIndexRoute
  OrmsIndexRoute: typeof OrmsIndexRoute
  PaymentsIndexRoute: typeof PaymentsIndexRoute
  StateManagementIndexRoute: typeof StateManagementIndexRoute
  UiLibrariesIndexRoute: typeof UiLibrariesIndexRoute
  ValidationIndexRoute: typeof ValidationIndexRoute
  VectorGraphicsIndexRoute: typeof VectorGraphicsIndexRoute
  VersionControlIndexRoute: typeof VersionControlIndexRoute
  VideoEditingIndexRoute: typeof VideoEditingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/video-editing/': {
      id: '/video-editing/'
      path: '/video-editing'
      fullPath: '/video-editing'
      preLoaderRoute: typeof VideoEditingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/version-control/': {
      id: '/version-control/'
      path: '/version-control'
      fullPath: '/version-control'
      preLoaderRoute: typeof VersionControlIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vector-graphics/': {
      id: '/vector-graphics/'
      path: '/vector-graphics'
      fullPath: '/vector-graphics'
      preLoaderRoute: typeof VectorGraphicsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/validation/': {
      id: '/validation/'
      path: '/validation'
      fullPath: '/validation'
      preLoaderRoute: typeof ValidationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ui-libraries/': {
      id: '/ui-libraries/'
      path: '/ui-libraries'
      fullPath: '/ui-libraries'
      preLoaderRoute: typeof UiLibrariesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/state-management/': {
      id: '/state-management/'
      path: '/state-management'
      fullPath: '/state-management'
      preLoaderRoute: typeof StateManagementIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payments/': {
      id: '/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orms/': {
      id: '/orms/'
      path: '/orms'
      fullPath: '/orms'
      preLoaderRoute: typeof OrmsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mailing/': {
      id: '/mailing/'
      path: '/mailing'
      fullPath: '/mailing'
      preLoaderRoute: typeof MailingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learning/': {
      id: '/learning/'
      path: '/learning'
      fullPath: '/learning'
      preLoaderRoute: typeof LearningIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/icon-libraries/': {
      id: '/icon-libraries/'
      path: '/icon-libraries'
      fullPath: '/icon-libraries'
      preLoaderRoute: typeof IconLibrariesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hosting/': {
      id: '/hosting/'
      path: '/hosting'
      fullPath: '/hosting'
      preLoaderRoute: typeof HostingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/graphic-design/': {
      id: '/graphic-design/'
      path: '/graphic-design'
      fullPath: '/graphic-design'
      preLoaderRoute: typeof GraphicDesignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/frontend-languages/': {
      id: '/frontend-languages/'
      path: '/frontend-languages'
      fullPath: '/frontend-languages'
      preLoaderRoute: typeof FrontendLanguagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/frameworks/': {
      id: '/frameworks/'
      path: '/frameworks'
      fullPath: '/frameworks'
      preLoaderRoute: typeof FrameworksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/file-storage/': {
      id: '/file-storage/'
      path: '/file-storage'
      fullPath: '/file-storage'
      preLoaderRoute: typeof FileStorageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/environment/': {
      id: '/environment/'
      path: '/environment'
      fullPath: '/environment'
      preLoaderRoute: typeof EnvironmentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/diagnostics/': {
      id: '/diagnostics/'
      path: '/diagnostics'
      fullPath: '/diagnostics'
      preLoaderRoute: typeof DiagnosticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design/': {
      id: '/design/'
      path: '/design'
      fullPath: '/design'
      preLoaderRoute: typeof DesignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/databases/': {
      id: '/databases/'
      path: '/databases'
      fullPath: '/databases'
      preLoaderRoute: typeof DatabasesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/database-providers/': {
      id: '/database-providers/'
      path: '/database-providers'
      fullPath: '/database-providers'
      preLoaderRoute: typeof DatabaseProvidersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/css-libraries/': {
      id: '/css-libraries/'
      path: '/css-libraries'
      fullPath: '/css-libraries'
      preLoaderRoute: typeof CssLibrariesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/code-editors/': {
      id: '/code-editors/'
      path: '/code-editors'
      fullPath: '/code-editors'
      preLoaderRoute: typeof CodeEditorsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ci-cd/': {
      id: '/ci-cd/'
      path: '/ci-cd'
      fullPath: '/ci-cd'
      preLoaderRoute: typeof CiCdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  CiCdIndexRoute: CiCdIndexRoute,
  CodeEditorsIndexRoute: CodeEditorsIndexRoute,
  CssLibrariesIndexRoute: CssLibrariesIndexRoute,
  DatabaseProvidersIndexRoute: DatabaseProvidersIndexRoute,
  DatabasesIndexRoute: DatabasesIndexRoute,
  DesignIndexRoute: DesignIndexRoute,
  DiagnosticsIndexRoute: DiagnosticsIndexRoute,
  EnvironmentIndexRoute: EnvironmentIndexRoute,
  FileStorageIndexRoute: FileStorageIndexRoute,
  FrameworksIndexRoute: FrameworksIndexRoute,
  FrontendLanguagesIndexRoute: FrontendLanguagesIndexRoute,
  GraphicDesignIndexRoute: GraphicDesignIndexRoute,
  HostingIndexRoute: HostingIndexRoute,
  IconLibrariesIndexRoute: IconLibrariesIndexRoute,
  LearningIndexRoute: LearningIndexRoute,
  MailingIndexRoute: MailingIndexRoute,
  OrmsIndexRoute: OrmsIndexRoute,
  PaymentsIndexRoute: PaymentsIndexRoute,
  StateManagementIndexRoute: StateManagementIndexRoute,
  UiLibrariesIndexRoute: UiLibrariesIndexRoute,
  ValidationIndexRoute: ValidationIndexRoute,
  VectorGraphicsIndexRoute: VectorGraphicsIndexRoute,
  VersionControlIndexRoute: VersionControlIndexRoute,
  VideoEditingIndexRoute: VideoEditingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
