/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as VideoEditingIndexImport } from './routes/video-editing/index'
import { Route as VersionControlIndexImport } from './routes/version-control/index'
import { Route as VectorGraphicsIndexImport } from './routes/vector-graphics/index'
import { Route as ValidationIndexImport } from './routes/validation/index'
import { Route as UiLibrariesIndexImport } from './routes/ui-libraries/index'
import { Route as PaymentsIndexImport } from './routes/payments/index'
import { Route as OrmsIndexImport } from './routes/orms/index'
import { Route as MailingIndexImport } from './routes/mailing/index'
import { Route as LearningIndexImport } from './routes/learning/index'
import { Route as IconLibrariesIndexImport } from './routes/icon-libraries/index'
import { Route as HostingIndexImport } from './routes/hosting/index'
import { Route as GraphicDesignIndexImport } from './routes/graphic-design/index'
import { Route as FrontendLanguagesIndexImport } from './routes/frontend-languages/index'
import { Route as FrameworksIndexImport } from './routes/frameworks/index'
import { Route as DiagnosticsIndexImport } from './routes/diagnostics/index'
import { Route as DesignIndexImport } from './routes/design/index'
import { Route as DatabasesIndexImport } from './routes/databases/index'
import { Route as DatabaseProvidersIndexImport } from './routes/database-providers/index'
import { Route as CssLibrariesIndexImport } from './routes/css-libraries/index'
import { Route as CodeEditorsIndexImport } from './routes/code-editors/index'
import { Route as CiCdIndexImport } from './routes/ci-cd/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VideoEditingIndexRoute = VideoEditingIndexImport.update({
  id: '/video-editing/',
  path: '/video-editing/',
  getParentRoute: () => rootRoute,
} as any)

const VersionControlIndexRoute = VersionControlIndexImport.update({
  id: '/version-control/',
  path: '/version-control/',
  getParentRoute: () => rootRoute,
} as any)

const VectorGraphicsIndexRoute = VectorGraphicsIndexImport.update({
  id: '/vector-graphics/',
  path: '/vector-graphics/',
  getParentRoute: () => rootRoute,
} as any)

const ValidationIndexRoute = ValidationIndexImport.update({
  id: '/validation/',
  path: '/validation/',
  getParentRoute: () => rootRoute,
} as any)

const UiLibrariesIndexRoute = UiLibrariesIndexImport.update({
  id: '/ui-libraries/',
  path: '/ui-libraries/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsIndexRoute = PaymentsIndexImport.update({
  id: '/payments/',
  path: '/payments/',
  getParentRoute: () => rootRoute,
} as any)

const OrmsIndexRoute = OrmsIndexImport.update({
  id: '/orms/',
  path: '/orms/',
  getParentRoute: () => rootRoute,
} as any)

const MailingIndexRoute = MailingIndexImport.update({
  id: '/mailing/',
  path: '/mailing/',
  getParentRoute: () => rootRoute,
} as any)

const LearningIndexRoute = LearningIndexImport.update({
  id: '/learning/',
  path: '/learning/',
  getParentRoute: () => rootRoute,
} as any)

const IconLibrariesIndexRoute = IconLibrariesIndexImport.update({
  id: '/icon-libraries/',
  path: '/icon-libraries/',
  getParentRoute: () => rootRoute,
} as any)

const HostingIndexRoute = HostingIndexImport.update({
  id: '/hosting/',
  path: '/hosting/',
  getParentRoute: () => rootRoute,
} as any)

const GraphicDesignIndexRoute = GraphicDesignIndexImport.update({
  id: '/graphic-design/',
  path: '/graphic-design/',
  getParentRoute: () => rootRoute,
} as any)

const FrontendLanguagesIndexRoute = FrontendLanguagesIndexImport.update({
  id: '/frontend-languages/',
  path: '/frontend-languages/',
  getParentRoute: () => rootRoute,
} as any)

const FrameworksIndexRoute = FrameworksIndexImport.update({
  id: '/frameworks/',
  path: '/frameworks/',
  getParentRoute: () => rootRoute,
} as any)

const DiagnosticsIndexRoute = DiagnosticsIndexImport.update({
  id: '/diagnostics/',
  path: '/diagnostics/',
  getParentRoute: () => rootRoute,
} as any)

const DesignIndexRoute = DesignIndexImport.update({
  id: '/design/',
  path: '/design/',
  getParentRoute: () => rootRoute,
} as any)

const DatabasesIndexRoute = DatabasesIndexImport.update({
  id: '/databases/',
  path: '/databases/',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseProvidersIndexRoute = DatabaseProvidersIndexImport.update({
  id: '/database-providers/',
  path: '/database-providers/',
  getParentRoute: () => rootRoute,
} as any)

const CssLibrariesIndexRoute = CssLibrariesIndexImport.update({
  id: '/css-libraries/',
  path: '/css-libraries/',
  getParentRoute: () => rootRoute,
} as any)

const CodeEditorsIndexRoute = CodeEditorsIndexImport.update({
  id: '/code-editors/',
  path: '/code-editors/',
  getParentRoute: () => rootRoute,
} as any)

const CiCdIndexRoute = CiCdIndexImport.update({
  id: '/ci-cd/',
  path: '/ci-cd/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/ci-cd/': {
      id: '/ci-cd/'
      path: '/ci-cd'
      fullPath: '/ci-cd'
      preLoaderRoute: typeof CiCdIndexImport
      parentRoute: typeof rootRoute
    }
    '/code-editors/': {
      id: '/code-editors/'
      path: '/code-editors'
      fullPath: '/code-editors'
      preLoaderRoute: typeof CodeEditorsIndexImport
      parentRoute: typeof rootRoute
    }
    '/css-libraries/': {
      id: '/css-libraries/'
      path: '/css-libraries'
      fullPath: '/css-libraries'
      preLoaderRoute: typeof CssLibrariesIndexImport
      parentRoute: typeof rootRoute
    }
    '/database-providers/': {
      id: '/database-providers/'
      path: '/database-providers'
      fullPath: '/database-providers'
      preLoaderRoute: typeof DatabaseProvidersIndexImport
      parentRoute: typeof rootRoute
    }
    '/databases/': {
      id: '/databases/'
      path: '/databases'
      fullPath: '/databases'
      preLoaderRoute: typeof DatabasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/design/': {
      id: '/design/'
      path: '/design'
      fullPath: '/design'
      preLoaderRoute: typeof DesignIndexImport
      parentRoute: typeof rootRoute
    }
    '/diagnostics/': {
      id: '/diagnostics/'
      path: '/diagnostics'
      fullPath: '/diagnostics'
      preLoaderRoute: typeof DiagnosticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/frameworks/': {
      id: '/frameworks/'
      path: '/frameworks'
      fullPath: '/frameworks'
      preLoaderRoute: typeof FrameworksIndexImport
      parentRoute: typeof rootRoute
    }
    '/frontend-languages/': {
      id: '/frontend-languages/'
      path: '/frontend-languages'
      fullPath: '/frontend-languages'
      preLoaderRoute: typeof FrontendLanguagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/graphic-design/': {
      id: '/graphic-design/'
      path: '/graphic-design'
      fullPath: '/graphic-design'
      preLoaderRoute: typeof GraphicDesignIndexImport
      parentRoute: typeof rootRoute
    }
    '/hosting/': {
      id: '/hosting/'
      path: '/hosting'
      fullPath: '/hosting'
      preLoaderRoute: typeof HostingIndexImport
      parentRoute: typeof rootRoute
    }
    '/icon-libraries/': {
      id: '/icon-libraries/'
      path: '/icon-libraries'
      fullPath: '/icon-libraries'
      preLoaderRoute: typeof IconLibrariesIndexImport
      parentRoute: typeof rootRoute
    }
    '/learning/': {
      id: '/learning/'
      path: '/learning'
      fullPath: '/learning'
      preLoaderRoute: typeof LearningIndexImport
      parentRoute: typeof rootRoute
    }
    '/mailing/': {
      id: '/mailing/'
      path: '/mailing'
      fullPath: '/mailing'
      preLoaderRoute: typeof MailingIndexImport
      parentRoute: typeof rootRoute
    }
    '/orms/': {
      id: '/orms/'
      path: '/orms'
      fullPath: '/orms'
      preLoaderRoute: typeof OrmsIndexImport
      parentRoute: typeof rootRoute
    }
    '/payments/': {
      id: '/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/ui-libraries/': {
      id: '/ui-libraries/'
      path: '/ui-libraries'
      fullPath: '/ui-libraries'
      preLoaderRoute: typeof UiLibrariesIndexImport
      parentRoute: typeof rootRoute
    }
    '/validation/': {
      id: '/validation/'
      path: '/validation'
      fullPath: '/validation'
      preLoaderRoute: typeof ValidationIndexImport
      parentRoute: typeof rootRoute
    }
    '/vector-graphics/': {
      id: '/vector-graphics/'
      path: '/vector-graphics'
      fullPath: '/vector-graphics'
      preLoaderRoute: typeof VectorGraphicsIndexImport
      parentRoute: typeof rootRoute
    }
    '/version-control/': {
      id: '/version-control/'
      path: '/version-control'
      fullPath: '/version-control'
      preLoaderRoute: typeof VersionControlIndexImport
      parentRoute: typeof rootRoute
    }
    '/video-editing/': {
      id: '/video-editing/'
      path: '/video-editing'
      fullPath: '/video-editing'
      preLoaderRoute: typeof VideoEditingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/ci-cd': typeof CiCdIndexRoute
  '/code-editors': typeof CodeEditorsIndexRoute
  '/css-libraries': typeof CssLibrariesIndexRoute
  '/database-providers': typeof DatabaseProvidersIndexRoute
  '/databases': typeof DatabasesIndexRoute
  '/design': typeof DesignIndexRoute
  '/diagnostics': typeof DiagnosticsIndexRoute
  '/frameworks': typeof FrameworksIndexRoute
  '/frontend-languages': typeof FrontendLanguagesIndexRoute
  '/graphic-design': typeof GraphicDesignIndexRoute
  '/hosting': typeof HostingIndexRoute
  '/icon-libraries': typeof IconLibrariesIndexRoute
  '/learning': typeof LearningIndexRoute
  '/mailing': typeof MailingIndexRoute
  '/orms': typeof OrmsIndexRoute
  '/payments': typeof PaymentsIndexRoute
  '/ui-libraries': typeof UiLibrariesIndexRoute
  '/validation': typeof ValidationIndexRoute
  '/vector-graphics': typeof VectorGraphicsIndexRoute
  '/version-control': typeof VersionControlIndexRoute
  '/video-editing': typeof VideoEditingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/ci-cd': typeof CiCdIndexRoute
  '/code-editors': typeof CodeEditorsIndexRoute
  '/css-libraries': typeof CssLibrariesIndexRoute
  '/database-providers': typeof DatabaseProvidersIndexRoute
  '/databases': typeof DatabasesIndexRoute
  '/design': typeof DesignIndexRoute
  '/diagnostics': typeof DiagnosticsIndexRoute
  '/frameworks': typeof FrameworksIndexRoute
  '/frontend-languages': typeof FrontendLanguagesIndexRoute
  '/graphic-design': typeof GraphicDesignIndexRoute
  '/hosting': typeof HostingIndexRoute
  '/icon-libraries': typeof IconLibrariesIndexRoute
  '/learning': typeof LearningIndexRoute
  '/mailing': typeof MailingIndexRoute
  '/orms': typeof OrmsIndexRoute
  '/payments': typeof PaymentsIndexRoute
  '/ui-libraries': typeof UiLibrariesIndexRoute
  '/validation': typeof ValidationIndexRoute
  '/vector-graphics': typeof VectorGraphicsIndexRoute
  '/version-control': typeof VersionControlIndexRoute
  '/video-editing': typeof VideoEditingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/ci-cd/': typeof CiCdIndexRoute
  '/code-editors/': typeof CodeEditorsIndexRoute
  '/css-libraries/': typeof CssLibrariesIndexRoute
  '/database-providers/': typeof DatabaseProvidersIndexRoute
  '/databases/': typeof DatabasesIndexRoute
  '/design/': typeof DesignIndexRoute
  '/diagnostics/': typeof DiagnosticsIndexRoute
  '/frameworks/': typeof FrameworksIndexRoute
  '/frontend-languages/': typeof FrontendLanguagesIndexRoute
  '/graphic-design/': typeof GraphicDesignIndexRoute
  '/hosting/': typeof HostingIndexRoute
  '/icon-libraries/': typeof IconLibrariesIndexRoute
  '/learning/': typeof LearningIndexRoute
  '/mailing/': typeof MailingIndexRoute
  '/orms/': typeof OrmsIndexRoute
  '/payments/': typeof PaymentsIndexRoute
  '/ui-libraries/': typeof UiLibrariesIndexRoute
  '/validation/': typeof ValidationIndexRoute
  '/vector-graphics/': typeof VectorGraphicsIndexRoute
  '/version-control/': typeof VersionControlIndexRoute
  '/video-editing/': typeof VideoEditingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/auth'
    | '/ci-cd'
    | '/code-editors'
    | '/css-libraries'
    | '/database-providers'
    | '/databases'
    | '/design'
    | '/diagnostics'
    | '/frameworks'
    | '/frontend-languages'
    | '/graphic-design'
    | '/hosting'
    | '/icon-libraries'
    | '/learning'
    | '/mailing'
    | '/orms'
    | '/payments'
    | '/ui-libraries'
    | '/validation'
    | '/vector-graphics'
    | '/version-control'
    | '/video-editing'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/auth'
    | '/ci-cd'
    | '/code-editors'
    | '/css-libraries'
    | '/database-providers'
    | '/databases'
    | '/design'
    | '/diagnostics'
    | '/frameworks'
    | '/frontend-languages'
    | '/graphic-design'
    | '/hosting'
    | '/icon-libraries'
    | '/learning'
    | '/mailing'
    | '/orms'
    | '/payments'
    | '/ui-libraries'
    | '/validation'
    | '/vector-graphics'
    | '/version-control'
    | '/video-editing'
  id:
    | '__root__'
    | '/'
    | '/analytics/'
    | '/auth/'
    | '/ci-cd/'
    | '/code-editors/'
    | '/css-libraries/'
    | '/database-providers/'
    | '/databases/'
    | '/design/'
    | '/diagnostics/'
    | '/frameworks/'
    | '/frontend-languages/'
    | '/graphic-design/'
    | '/hosting/'
    | '/icon-libraries/'
    | '/learning/'
    | '/mailing/'
    | '/orms/'
    | '/payments/'
    | '/ui-libraries/'
    | '/validation/'
    | '/vector-graphics/'
    | '/version-control/'
    | '/video-editing/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  CiCdIndexRoute: typeof CiCdIndexRoute
  CodeEditorsIndexRoute: typeof CodeEditorsIndexRoute
  CssLibrariesIndexRoute: typeof CssLibrariesIndexRoute
  DatabaseProvidersIndexRoute: typeof DatabaseProvidersIndexRoute
  DatabasesIndexRoute: typeof DatabasesIndexRoute
  DesignIndexRoute: typeof DesignIndexRoute
  DiagnosticsIndexRoute: typeof DiagnosticsIndexRoute
  FrameworksIndexRoute: typeof FrameworksIndexRoute
  FrontendLanguagesIndexRoute: typeof FrontendLanguagesIndexRoute
  GraphicDesignIndexRoute: typeof GraphicDesignIndexRoute
  HostingIndexRoute: typeof HostingIndexRoute
  IconLibrariesIndexRoute: typeof IconLibrariesIndexRoute
  LearningIndexRoute: typeof LearningIndexRoute
  MailingIndexRoute: typeof MailingIndexRoute
  OrmsIndexRoute: typeof OrmsIndexRoute
  PaymentsIndexRoute: typeof PaymentsIndexRoute
  UiLibrariesIndexRoute: typeof UiLibrariesIndexRoute
  ValidationIndexRoute: typeof ValidationIndexRoute
  VectorGraphicsIndexRoute: typeof VectorGraphicsIndexRoute
  VersionControlIndexRoute: typeof VersionControlIndexRoute
  VideoEditingIndexRoute: typeof VideoEditingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  CiCdIndexRoute: CiCdIndexRoute,
  CodeEditorsIndexRoute: CodeEditorsIndexRoute,
  CssLibrariesIndexRoute: CssLibrariesIndexRoute,
  DatabaseProvidersIndexRoute: DatabaseProvidersIndexRoute,
  DatabasesIndexRoute: DatabasesIndexRoute,
  DesignIndexRoute: DesignIndexRoute,
  DiagnosticsIndexRoute: DiagnosticsIndexRoute,
  FrameworksIndexRoute: FrameworksIndexRoute,
  FrontendLanguagesIndexRoute: FrontendLanguagesIndexRoute,
  GraphicDesignIndexRoute: GraphicDesignIndexRoute,
  HostingIndexRoute: HostingIndexRoute,
  IconLibrariesIndexRoute: IconLibrariesIndexRoute,
  LearningIndexRoute: LearningIndexRoute,
  MailingIndexRoute: MailingIndexRoute,
  OrmsIndexRoute: OrmsIndexRoute,
  PaymentsIndexRoute: PaymentsIndexRoute,
  UiLibrariesIndexRoute: UiLibrariesIndexRoute,
  ValidationIndexRoute: ValidationIndexRoute,
  VectorGraphicsIndexRoute: VectorGraphicsIndexRoute,
  VersionControlIndexRoute: VersionControlIndexRoute,
  VideoEditingIndexRoute: VideoEditingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics/",
        "/auth/",
        "/ci-cd/",
        "/code-editors/",
        "/css-libraries/",
        "/database-providers/",
        "/databases/",
        "/design/",
        "/diagnostics/",
        "/frameworks/",
        "/frontend-languages/",
        "/graphic-design/",
        "/hosting/",
        "/icon-libraries/",
        "/learning/",
        "/mailing/",
        "/orms/",
        "/payments/",
        "/ui-libraries/",
        "/validation/",
        "/vector-graphics/",
        "/version-control/",
        "/video-editing/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analytics/": {
      "filePath": "analytics/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/ci-cd/": {
      "filePath": "ci-cd/index.tsx"
    },
    "/code-editors/": {
      "filePath": "code-editors/index.tsx"
    },
    "/css-libraries/": {
      "filePath": "css-libraries/index.tsx"
    },
    "/database-providers/": {
      "filePath": "database-providers/index.tsx"
    },
    "/databases/": {
      "filePath": "databases/index.tsx"
    },
    "/design/": {
      "filePath": "design/index.tsx"
    },
    "/diagnostics/": {
      "filePath": "diagnostics/index.tsx"
    },
    "/frameworks/": {
      "filePath": "frameworks/index.tsx"
    },
    "/frontend-languages/": {
      "filePath": "frontend-languages/index.tsx"
    },
    "/graphic-design/": {
      "filePath": "graphic-design/index.tsx"
    },
    "/hosting/": {
      "filePath": "hosting/index.tsx"
    },
    "/icon-libraries/": {
      "filePath": "icon-libraries/index.tsx"
    },
    "/learning/": {
      "filePath": "learning/index.tsx"
    },
    "/mailing/": {
      "filePath": "mailing/index.tsx"
    },
    "/orms/": {
      "filePath": "orms/index.tsx"
    },
    "/payments/": {
      "filePath": "payments/index.tsx"
    },
    "/ui-libraries/": {
      "filePath": "ui-libraries/index.tsx"
    },
    "/validation/": {
      "filePath": "validation/index.tsx"
    },
    "/vector-graphics/": {
      "filePath": "vector-graphics/index.tsx"
    },
    "/version-control/": {
      "filePath": "version-control/index.tsx"
    },
    "/video-editing/": {
      "filePath": "video-editing/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
